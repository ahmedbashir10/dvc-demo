name: DVC Training

on:
  push:
    paths:
      - "train.py"
      - "data/**"
      - "dvc.yaml"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install system tools (jq, bc)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc

      # Cache the DVC object store
      - name: Restore .dvc/cache
        uses: actions/cache@v3
        with:
          path: .dvc/cache
          key: dvc-obj-${{ runner.os }}-${{ hashFiles('**/*.dvc','dvc.lock') }}
          restore-keys: |
            dvc-obj-${{ runner.os }}-

      # Cache the local file-remote folder so subsequent runs can pull from it
      - name: Restore dvc-remote
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/dvc-remote
          key: dvc-remote-${{ runner.os }}-${{ hashFiles('**/*.dvc','dvc.lock') }}
          restore-keys: |
            dvc-remote-${{ runner.os }}-

      - name: Ensure relative remote exists
        run: mkdir -p dvc-remote

      # First run has an empty remote; don't fail the jobâ€”let it complete to warm the cache
      - name: Pull data (best effort) and materialize files
        run: |
          dvc pull || true
          dvc checkout || true

      - name: Reproduce pipeline
        run: dvc repro || true

      - name: Compare metrics and push artifacts if improved
        run: |
          # Guard for "no previous metrics"
          git show HEAD:metrics.json > old_metrics.json || echo "{}" > old_metrics.json
          echo "Old metrics:" && cat old_metrics.json || true
          echo "New metrics:" && cat metrics.json || true

          old_mae=$(jq -r '.MAE // empty' old_metrics.json)
          new_mae=$(jq -r '.MAE // empty' metrics.json)

          if [ -z "$new_mae" ]; then
            echo "No new metrics yet (likely first warm-up run)."
          else
            if [ -z "$old_mae" ]; then old_mae=1e99; fi
            echo "Old MAE: $old_mae, New MAE: $new_mae"
            if (( $(echo "$new_mae < $old_mae" | bc -l) )); then
              echo "Improvement found, committing updated pipeline metadata..."
              git config user.name github-actions
              git config user.email github-actions@github.com
              git add metrics.json dvc.lock
              git commit -m "Update pipeline: MAE improved to $new_mae" || true
              git push || true
            else
              echo "No improvement."
            fi
          fi

          # Populate the local file-remote so the cache can be saved for next runs
          dvc push || true
